// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-1.0.x", "linux-musl", "windows"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  createdAt   DateTime     @default(now())
  generations Generation[]

  @@map("users")
}

model Generation {
  id              String   @id @default(uuid())
  userId          String?  @map("user_id")
  gradeLevel      Int      @map("grade_level")
  topic           String
  difficulty      String
  problemCount    Int      @map("problem_count")
  visualTheme     String   @map("visual_theme")
  worksheetPdfUrl String?  @map("worksheet_pdf_url")
  answerKeyPdfUrl String?  @map("answer_key_pdf_url")
  tokenUsage      Int?     @map("token_usage")
  status          String   @default("pending")
  errorMessage    String?  @map("error_message")
  createdAt       DateTime @default(now()) @map("created_at")

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  generationStandards GenerationStandard[]

  @@map("generations")
  @@index([userId])
  @@index([status])
  @@index([createdAt])
}

model Standard {
  id            String   @id @default(uuid())
  code          String   @unique // e.g., "CCSS.MATH.CONTENT.1.OA.A.1"
  description   String   @db.Text
  grade         Int      // 0 for K, 1-6 for grades
  domain        String   // e.g., "Operations & Algebraic Thinking"
  domainCode    String   @map("domain_code") // e.g., "OA"
  cluster       String   @db.Text // e.g., "Represent and solve problems involving addition and subtraction"
  clusterCode   String   @map("cluster_code") // e.g., "A"
  standardNum   Int      @map("standard_number") // e.g., 1
  
  topicStandards TopicStandard[]
  generationStandards GenerationStandard[]
  
  @@map("standards")
  @@index([grade])
  @@index([domainCode])
}

model TopicStandard {
  id          String   @id @default(uuid())
  topicId     String   @map("topic_id")
  standardId  String   @map("standard_id")
  
  standard    Standard @relation(fields: [standardId], references: [id], onDelete: Cascade)
  
  @@unique([topicId, standardId])
  @@map("topic_standards")
}

model GenerationStandard {
  id           String   @id @default(uuid())
  generationId String   @map("generation_id")
  standardId   String   @map("standard_id")
  
  generation   Generation @relation(fields: [generationId], references: [id], onDelete: Cascade)
  standard     Standard @relation(fields: [standardId], references: [id], onDelete: Cascade)
  
  @@unique([generationId, standardId])
  @@map("generation_standards")
}
